# de-bruijn

generate [DeBruijn sequences](https://en.wikipedia.org/wiki/De_Bruijn_sequence)

You can use DeBruijn numbers to
[crack combination locks](http://www.youtube.com/watch?v=iPLQgXUiU14).

[![browser support](http://ci.testling.com/substack/de-bruijn.png)](http://ci.testling.com/substack/de-bruijn)

[![build status](https://secure.travis-ci.org/substack/de-bruijn.png)](http://travis-ci.org/substack/de-bruijn)

# example

``` js
var deBruijn = require('de-bruijn');

var a = Number(process.argv[2]);
var b = Number(process.argv[3]);

var xs = deBruijn(a, b);
console.log(xs.join(''));
```

```
$ node example/seq.js 2 3
00010111
```

```
$ node example/seq.js 10 3

```

# methods

``` js
var deBruijn = require('de-bruijn')
```

## var xs = deBruijn(k, n)

Return an array `xs` with the de Bruijn sequence for `k` digits of order `n`.

# install

With [npm](https://npmjs.org) do:

```
npm install de-bruijn
```

# license

MIT
